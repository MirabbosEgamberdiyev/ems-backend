# Java Version Target
-target 1.7

# Disable Optimization & Shrinking
-dontshrink
-dontoptimize

# Class Member Names
-useuniqueclassmembernames
-adaptclassstrings

# Warnings & Notes
-dontnote
-ignorewarnings
-dontwarn

# Keep Directives for Spring Boot
-keep public class * extends org.springframework.boot.web.support.SpringBootServletInitializer
-keepclasseswithmembers public class * { public static void main(java.lang.String[]); }
-keepclassmembers enum * { *; }
-keep @org.springframework.cache.annotation.EnableCaching class *
-keep @org.springframework.context.annotation.Configuration class *
-keep @org.springframework.boot.context.properties.ConfigurationProperties class *
-keep @org.springframework.boot.autoconfigure.SpringBootApplication class *

# Serialization
-keepnames class * implements java.io.Serializable
-keepclassmembernames public class com.test.blah.config.liquibase.AsyncSpringLiquibase

# Access Modification
-allowaccessmodification

# Annotation Attributes
-keepattributes *Annotation*

# Directories
-keepdirectories **

# Getter and Setter Methods
-keepclassmembers class * {
    *** get*();
    void set*(***);
}

# Class and Enum Reflection
-keepclassmembernames class * {
    java.lang.Class class$(java.lang.String);
    java.lang.Class class$(java.lang.String, boolean);
}

# Enum Methods
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

# Serializable Members
-keepclassmembers class * implements java.io.Serializable {
    static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    !static !transient <fields>;
    !private <fields>;
    !private <methods>;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

# Spring Annotations
-keepclassmembers class * {
    @org.springframework.beans.factory.annotation.Autowired <fields>;
    @org.springframework.beans.factory.annotation.Autowired <methods>;
    @org.springframework.security.access.prepost.PreAuthorize <methods>;
}
